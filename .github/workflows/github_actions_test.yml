name: Test CI/CD pipeline
on:
  push:
    branches:
      - main
      - 'feature/**'
    paths-ignore:
      - 'README.md'
      - '.gitignore'
  pull_request:
    branches:
      - main
    paths-ignore:
      - 'README.md'
      - '.gitignore'
jobs:
#  supposed-to-fail:
#    runs-on: ubuntu-latest
#    continue-on-error: true
#    steps:
#      - name: step-should-fail
#        run: |
#          echo "This job is supposed to fail but workflow run should still be successful."
#          dksjfhkd
#  try-step-outcomes:
#    runs-on: ubuntu-latest
#    steps:
#      - name: Successful step
#        id: successful-step
#        run: echo "Successful step"
#      - name: Evaluate Successful step's success
#        if: steps.successful-step.outcome == 'success'
#        run: echo "Successful step's success outcome properly detected"
#      - name: Evaluate Successful step's failure
#        if: steps.successful-step.outcome == 'failure'
#        run: echo "If this is printed step outcome of Successful step wasn't detected properly!"
#      - name: Failed step
#        id: failed-step
#        run: sdkfljsdf
#      - name: Evaluate Failed step's success
#        if: always() && steps.failed-step.outcome == 'success'
#        run: echo "If this is printed step outcome of Failed step wasn't detected properly!"
#      - name: Evaluate Failed step's failure
#        if: always() && steps.failed-step.outcome == 'failure'
#        run: echo "Failed step's failure outcome properly detected."
  notify-teams:
    runs-on: ubuntu-latest
    steps:
      - name: Notify teams
        run: |
          workflow-run-link=https://github.com/kokriszti/gh_actions/actions/runs/${{ github.run_id }}
          text='{"text":"Test message that tries to reference the ${workflow-run-link} . Aenean nec ipsum odio. Pellentesque dapibus justo odio, pretium auctor mauris varius quis. Donec pulvinar pulvinar turpis egestas varius. Also contains link: https://prog.hu/hirek/6518/chatgpt-generalt-kod-hibas-programozas-felmeres"}'
          echo $text > test.txt
          cat test.txt
#          curl ${{secrets.TEAMS_WEBHOOK_URI_NTT}} -X POST -H 'Content-type: application/json' --data "@test.txt"

  test:
    if: false # disabled for now
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Print path after primary repo checkout
        run: |
          pwd
          ls -la
      - name: Checkout other repo
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          repository: kokriszti/git_gyak
          path: folder-for-second-repo
      - name: Print path after second repo checkout
        run: |
          cd folder-for-second-repo
          ls -la
      - name: Delete to_remove.txt if exists
        run: |
          cd folder-for-second-repo
          if [ -e to_remove.txt ]; then
            echo "to_remove.txt exists, removing..."
            rm to_remove.txt
          else
            echo "to_remove.txt does not exist."
          fi
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'
          cache: maven
      - name: Run tests
        run: mvn test
      - name: Generate list using Markdown
        run: |
          echo "This is the lead in sentence for the list" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY # this is a blank line
          echo "- Lets add a bullet point" >> $GITHUB_STEP_SUMMARY
          echo "- Lets add a second bullet point" >> $GITHUB_STEP_SUMMARY
          echo "- How about a third one?" >> $GITHUB_STEP_SUMMARY
  docker:
    if: false # disabled for now
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          # Disabling shallow clone to improve relevancy of sonar reporting
          fetch-depth: 0

      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'
          cache: maven
      - name: Build with Maven
        run: mvn -B package -DskipTests
      - name: define-next-version
        id: define-next-version
        run: |
          chmod +x .github/script/tag_script.sh
          ./.github/script/tag_script.sh
        shell: bash
      - name: docker-login
        env:
          DOCKER_PASSWORD: ${{secrets.DOCKER_PASSWORD}}
          DOCKER_USER: ${{secrets.DOCKER_USER}}
        run:
          echo "$DOCKER_PASSWORD" | docker login --username $DOCKER_USER --password-stdin
      - name: docker-build
        run:
          docker build --build-arg JAR_PATH=target -t github-actions-test:${{ steps.define-next-version.outputs.NEXT_VERSION }} .
      - name: docker-tag
        run: |
          echo "The next tag is: ${{ steps.define-next-version.outputs.NEXT_VERSION }}"
          docker tag github-actions-test:${{ steps.define-next-version.outputs.NEXT_VERSION }} kokriszti/github-actions-test:${{ steps.define-next-version.outputs.NEXT_VERSION }}
      - name: docker-push
        run:
          docker push kokriszti/github-actions-test:${{ steps.define-next-version.outputs.NEXT_VERSION }}




          
      